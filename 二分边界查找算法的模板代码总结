https://segmentfault.com/a/1190000016825704
https://www.acwing.com/blog/content/4829/

标准二分查找
class BinarySearch {
    public int search(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;
        while (left <= right) {
            int mid = left + ((right - left) >> 1);
            if (nums[mid] == target) return mid;
            else if (nums[mid] > target) {
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return -1;
    }
}

二分查找左边界
class Solution {
    public int search(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;
        while (left < right) {
            int mid = left + (right - left) / 2;
            if (nums[mid] < target) {
                left = mid + 1;
            } else {
                right = mid;
            }
        }
        return nums[left] == target ? left : -1;
    }
}

二分查找右边界
class Solution {
    public int search(int[] nums, int target) {
        int left = 0;
        int right = nums.length - 1;
        while (left < right) {
            int mid = left + ((right - left) >> 1) + 1;
            if (nums[mid] > target) {
                right = mid - 1;
            } else {
                left = mid;
            }
        }
        return nums[right] == target ? right : -1;
    }
}





[https://labuladong.github.io/algo/2/18/28/](https://labuladong.github.io/algo/2/18/28/)

[https://leetcode-cn.com/problems/binary-search/solution/er-fen-cha-zhao-de-xun-huan-bu-bian-liang-zhi-yao-/](https://leetcode-cn.com/problems/binary-search/solution/er-fen-cha-zhao-de-xun-huan-bu-bian-liang-zhi-yao-/)

常规写法 1 中 l 和 r 的定义的范围为 [l, r]，是 左闭右闭 的也就是在后续的循环中， r 所指向的位置是 被 包括在循环以内的， r 所代表的位置实际上是要查找的数组的最后一个元素。

因为是 左闭右闭 的 r 初值应为 nums.size() - 1 ，因为数组的最后一个元素的索引为 nums[nums.size() - 1], 根据 r 定义 最后一个元素 即为 r = nums.size() - 1;

因为是 左闭右闭 循环结束条件的判断中为 while(l < r) ，因为对于左闭右闭的区间 [2, 2] 这种数值是有意义的（包含元素 2）， 所以当 r = l 的时候， 还有一个元素应该去查找， 所以 l <= r 继续循环

因为是 左闭右闭 r 的移动规则为 r = m - 1 ，因为当前循环被查找的为索引为 m 位置的元素(即：（nums[m] == target）) ， 下一次应该将查找范围的右边界设置为 m 位置的前一个元素（[l, m - 1]）， 因为 r 指向最后一个元素 , 所以让 r = m - 1 ， 下次的查找范就为 [l, r - 1] 即 [l, m - 1]

作者：mrsate
链接：[https://leetcode-cn.com/problems/binary-search/solution/er-fen-cha-zhao-de-xun-huan-bu-bian-liang-zhi-yao-/](https://leetcode-cn.com/problems/binary-search/solution/er-fen-cha-zhao-de-xun-huan-bu-bian-liang-zhi-yao-/)
